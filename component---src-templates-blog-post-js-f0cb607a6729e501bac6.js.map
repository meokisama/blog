{"version":3,"sources":["webpack:///./src/styles/dateTime.js","webpack:///./src/styles/category.js","webpack:///./src/components/comment.js","webpack:///./src/templates/blogPost.js"],"names":["DateTime","styled","time","Category","span","src","Comment","repo","useSiteMetadata","siteMetadata","utterances","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","themeMode","current","DARK","document","body","dataset","utterancesEl","querySelector","message","type","contentWindow","postMessage","postThemeMessage","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","createUtterancesEl","ref","displayName","OuterWrapper","div","device","sm","InnerWrapper","CommentWrap","section","PostCategory","Info","Time","Desc","p","Divider","Title","h1","md","query","BlogPost","data","markdownRemark","frontmatter","title","desc","thumbnail","date","category","html","ogImagePath","childImageSharp","fixed","description","image","dateTime","dangerouslySetInnerHTML","__html","rhythm"],"mappings":"6FAAA,IAEMA,EAFN,UAEiBC,EAAOC,KAAV,yEAAGD,CAAH,0GAOCD,O,kCCTf,IAEMG,EAFN,UAEiBF,EAAOG,KAAV,qEAAGH,CAAH,0GAOCE,O,gLCJTE,EAAM,sBAKNC,EAAU,WACd,IACQC,EADKC,cACSC,aAAaC,WAA3BH,KACFI,EAAQC,qBAAWC,KACnBC,EAAeC,iBAAO,MACtBC,EAAsBD,kBAAO,GA6CnC,OA3CAE,qBAAU,WACR,GAAKV,EAAL,CACA,IAAIW,EAAY,KAKTA,EAHFF,EAAoBG,QAGNR,IAAUS,IAhBd,cADC,eAgBZC,SAASC,KAAKC,QAAQZ,QAAUS,IAfrB,cADC,eAmBhB,IAkBMI,EAAeV,EAAaK,QAAQM,cAtCnB,2BAiDvBT,EAAoBG,QATK,WACvB,GAAKK,EAAL,CACA,IAAME,EAAU,CACdC,KAAM,YACNhB,MAAOO,GAETM,EAAaI,cAAcC,YAAYH,EAASrB,IAI9CyB,GA9BuB,WACzB,IAAMC,EAAUV,SAASW,cAAc,UACjCC,EAAa,CACjB5B,IAAQA,EAAL,aACHE,OACA,aAAc,QACd2B,MAAO,UACPvB,MAAOO,EACPiB,YAAa,YACbC,MAAO,QAETC,OAAOC,QAAQL,GAAYM,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDV,EAAQW,aAAaF,EAAKC,MAE5B3B,EAAaK,QAAQwB,YAAYZ,GACjCf,EAAoBG,SAAU,EAgB5ByB,MACH,CAACrC,EAAMI,IAEH,yBAAKkC,IAAK/B,KAGnBR,EAAQwC,YAAc,UAEPxC,Q,gDCXTyC,EAAe9C,IAAO+C,IAAV,6EAAG/C,CAAH,sFAGK,qBAAGU,MAAkBsC,OAAOC,MAK7CC,EAAelD,IAAO+C,IAAV,6EAAG/C,CAAH,gHAKK,qBAAGU,MAAkBsC,OAAOC,MAK7CE,EAAcnD,IAAOoD,QAAV,4EAAGpD,CAAH,6HAMM,qBAAGU,MAAkBsC,OAAOC,MAK7CI,EAAerD,YAAOE,KAAV,6EAAGF,CAAH,kEAKZsD,EAAOtD,IAAO+C,IAAV,qEAAG/C,CAAH,qCAIJuD,EAAOvD,YAAOD,KAAV,qEAAGC,CAAH,gDAKJwD,EAAOxD,IAAOyD,EAAV,qEAAGzD,CAAH,2IAKa,qBAAGU,MAAkBsC,OAAOC,MAM7CS,EAAU1D,IAAO+C,IAAV,wEAAG/C,CAAH,4HAQP2D,EAAQ3D,IAAO4D,GAAV,sEAAG5D,CAAH,8MAKY,qBAAGU,MAAkBsC,OAAOa,MAK5B,qBAAGnD,MAAkBsC,OAAOC,MAMtCa,EAAK,aAqBHC,UA9IE,SAAC,GAAc,IAAD,IAAXC,KAEhBC,eAF2B,IAGzBC,YAAeC,EAHU,EAGVA,MAAOC,EAHG,EAGHA,KAAMC,EAHH,EAGGA,UAAWC,EAHd,EAGcA,KAAMC,EAHpB,EAGoBA,SAC7CC,EAJyB,EAIzBA,KAIEC,EAAcJ,GAAaA,EAAUK,gBAAgBC,MAAMvE,IAEjE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK+D,MAAOA,EAAOS,YAAaR,EAAMS,MAAOJ,IAC7C,8BACE,iCACE,kBAAC3B,EAAD,KACE,kBAACI,EAAD,KACE,6BACE,gCACE,kBAACI,EAAD,KACE,kBAACD,EAAD,KAAekB,GACf,kBAAChB,EAAD,CAAMuB,SAAUR,GAAOA,IAEzB,kBAACX,EAAD,KAAQQ,GACR,kBAACX,EAAD,KAAOY,IAET,kBAACV,EAAD,MACA,kBAAC,IAAD,CACEqB,wBAAyB,CAAEC,OAAQR,GACnCS,OAAQA,UAMlB,kBAAC9B,EAAD,KACE,kBAAC,EAAD","file":"component---src-templates-blog-post-js-f0cb607a6729e501bac6.js","sourcesContent":["import styled from 'styled-components';\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`;\n\nexport default DateTime;\n","import styled from 'styled-components';\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`;\n\nexport default Category;\n","import React, { useRef, useContext, useEffect } from 'react';\nimport ThemeContext from 'store/themeContext';\nimport useSiteMetadata from 'hooks/useSiteMetadata';\nimport { DARK } from 'constants/constants';\n\nconst src = 'https://utteranc.es';\nconst utterancesSelector = 'iframe.utterances-frame';\nconst LIGHT_THEME = 'github-light';\nconst DARK_THEME = 'github-dark';\n\nconst Comment = () => {\n  const site = useSiteMetadata();\n  const { repo } = site.siteMetadata.utterances;\n  const theme = useContext(ThemeContext);\n  const containerRef = useRef(null);\n  const isUtterancesCreated = useRef(false);\n\n  useEffect(() => {\n    if (!repo) return;\n    let themeMode = null;\n\n    if (!isUtterancesCreated.current) {\n      themeMode =\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME;\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME;\n\n    const createUtterancesEl = () => {\n      const comment = document.createElement('script');\n      const attributes = {\n        src: `${src}/client.js`,\n        repo,\n        'issue-term': 'title',\n        label: 'comment',\n        theme: themeMode,\n        crossOrigin: 'anonymous',\n        async: 'true',\n      };\n      Object.entries(attributes).forEach(([key, value]) => {\n        comment.setAttribute(key, value);\n      });\n      containerRef.current.appendChild(comment);\n      isUtterancesCreated.current = true;\n    };\n\n    const utterancesEl = containerRef.current.querySelector(utterancesSelector);\n\n    const postThemeMessage = () => {\n      if (!utterancesEl) return;\n      const message = {\n        type: 'set-theme',\n        theme: themeMode,\n      };\n      utterancesEl.contentWindow.postMessage(message, src);\n    };\n\n    isUtterancesCreated.current\n      ? postThemeMessage(utterancesEl)\n      : createUtterancesEl();\n  }, [repo, theme]);\n\n  return <div ref={containerRef} />;\n};\n\nComment.displayName = 'comment';\n\nexport default Comment;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from 'layout/layout';\nimport SEO from 'components/seo';\nimport Comment from 'components/comment';\nimport { rhythm } from 'styles/typography';\nimport Category from 'styles/category';\nimport DateTime from 'styles/dateTime';\nimport Markdown from 'styles/markdown';\n\nconst BlogPost = ({ data }) => {\n  const {\n    markdownRemark: {\n      frontmatter: { title, desc, thumbnail, date, category },\n      html,\n    },\n  } = data;\n\n  const ogImagePath = thumbnail && thumbnail.childImageSharp.fixed.src;\n\n  return (\n    <Layout>\n      <SEO title={title} description={desc} image={ogImagePath} />\n      <main>\n        <article>\n          <OuterWrapper>\n            <InnerWrapper>\n              <div>\n                <header>\n                  <Info>\n                    <PostCategory>{category}</PostCategory>\n                    <Time dateTime={date}>{date}</Time>\n                  </Info>\n                  <Title>{title}</Title>\n                  <Desc>{desc}</Desc>\n                </header>\n                <Divider />\n                <Markdown\n                  dangerouslySetInnerHTML={{ __html: html }}\n                  rhythm={rhythm}\n                />\n              </div>\n            </InnerWrapper>\n          </OuterWrapper>\n        </article>\n        <CommentWrap>\n          <Comment />\n        </CommentWrap>\n      </main>\n    </Layout>\n  );\n};\n\nconst OuterWrapper = styled.div`\n  margin-top: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-lg);\n  }\n`;\n\nconst InnerWrapper = styled.div`\n  width: var(--post-width);\n  margin: 0 auto;\n  padding-bottom: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: 87.5%;\n  }\n`;\n\nconst CommentWrap = styled.section`\n  width: 100%;\n  padding: 0 var(--padding-sm);\n  margin: 0 auto;\n  margin-bottom: var(--sizing-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    width: auto;\n  }\n`;\n\nconst PostCategory = styled(Category)`\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n`;\n\nconst Info = styled.div`\n  margin-bottom: var(--sizing-md);\n`;\n\nconst Time = styled(DateTime)`\n  display: block;\n  margin-top: var(--sizing-xs);\n`;\n\nconst Desc = styled.p`\n  margin-top: var(--sizing-lg);\n  line-height: 1.5;\n  font-size: var(--text-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.31579;\n    font-size: 1.1875rem;\n  }\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--color-gray-3);\n  margin-top: var(--sizing-lg);\n  margin-bottom: var(--sizing-lg);\n`;\n\nconst Title = styled.h1`\n  font-weight: var(--font-weight-bold);\n  line-height: 1.1875;\n  font-size: var(--text-xl);\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    line-height: 1.21875;\n    font-size: 2.5rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    line-height: 1.21875;\n    font-size: 2rem;\n  }\n`;\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        desc\n        thumbnail {\n          childImageSharp {\n            fixed {\n              src\n            }\n          }\n        }\n        date(formatString: \"YYYY-MM-DD\")\n        category\n      }\n    }\n  }\n`;\n\nexport default BlogPost;\n"],"sourceRoot":""}